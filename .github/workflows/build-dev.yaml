name: build-dev

on: [push]
jobs:
  build-be:
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Make envfile
      run: |
        touch .env
        echo MONGO_HOST: ${{secrets.MONGO_HOST}} >> .env
        echo MONGO_HOSTNAME: ${{secrets.MONGO_HOSTNAME}} >> .env
        echo MONGO_DATABASE: ${{secrets.MONGO_DATABASE}} >> .env
        echo MONGO_USERNAME: ${{secrets.MONGO_USERNAME}} >> .env
        echo MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}} >> .env
        echo ALLOWED_ORIGINS: ${{secrets.ALLOWED_ORIGINS}} >> .env
        echo SESSION_MIDDLEWARE_SECRET: ${{secrets.SESSION_MIDDLEWARE_SECRET}} >> .env
        echo STARLETTE_HOST: ${{secrets.STARLETTE_HOST}} >> .env
        echo STARLETTE_PORT: ${{secrets.STARLETTE_PORT}} >> .env
        echo STARLETTE_RELOAD: ${{secrets.STARLETTE_RELOAD}} >> .env
        echo STARLETTE_SSL_KEYFILE: ${{secrets.STARLETTE_SSL_KEYFILE}} >> .env
        echo STARLETTE_SSL_CERTFILE: ${{secrets.STARLETTE_SSL_CERTFILE}} >> .env
        echo API_KEY_POLYGON: ${{secrets.API_KEY_POLYGON}} >> .env
        echo "ls -a"
    - uses: actions/checkout@v2
    # - uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.10'
    # - name: pip install
    #   run: pip install --requirement ./src/finances_summary/requirements.txt
    # - name: run api
    #   run: |
    #     export PYTHONPATH=${GITHUB_WORKSPACE}/src/
    #     cd src
    #     python ./finances_summary/app.py
    - name: Run docker app
      run: docker-compose --file docker-compose-dev.yaml up --build
  # build-fe:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-node@v3
  #     with:
  #       node-version: '16'
  #   - name: install packages
  #     run: npm i
  #     working-directory: ./src/frontend
  #   - name: run build
  #     run: npm run build
  #     working-directory: ./src/frontend
  